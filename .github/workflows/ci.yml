name: Build and Test CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-react:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build React Frontend
        run: docker build -t react-frontend ./app/frontend

      - name: Run and Test React Frontend
        run: |
          docker run -d --name react-app -p 3000:3000 react-frontend
          sleep 10 
          curl --fail http://localhost:3000 || exit 1
          docker stop react-app

  build-and-test-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Node.js Backend
        run: docker build -t node-backend ./app/backend/node

      - name: Run and Test Node.js Backend
        run: |
          docker run -d --name node-app -p 5000:5000 node-backend
          timeout=30  
          while ! curl --fail http://localhost:5000/api/predict/test; do
            sleep 1
            timeout=$((timeout-1))
            if [ "$timeout" -le 0 ]; then
              echo "Node.js backend failed to start in time."
              docker logs node-app
              docker stop node-app
              exit 1
            fi
          done
          docker stop node-app

  build-and-test-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Python Backend
        run: docker build -t python-backend ./app/backend/python

      - name: Run and Test Python Backend
        run: |
          docker run -d --name python-app -p 5001:5001 python-backend
          timeout=30  
          while ! curl --fail http://localhost:5001/; do
            sleep 1
            timeout=$((timeout-1))
            if [ "$timeout" -le 0 ]; then
              echo "Python backend failed to start in time."
              docker logs python-app
              docker stop python-app
              exit 1
            fi
          done
          docker stop python-app
